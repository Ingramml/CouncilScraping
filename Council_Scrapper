import requests 
from bs4 import BeautifulSoup 
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from datetime import datetime
import os
import re
''' 
Downloads pdf from city of Phoenix meetings
Shoudl be lauched weekly
Nameing convetion is YYYYMMDD Meeting type Document type
	exampel 20190503 Formal Agenda

TODO refine naming convention
'''
# specify the URL of the archive here 
archive_url = "https://www.phoenix.gov/cityclerk/publicmeetings/city-council-meetings#"


driver = webdriver.Firefox()
driver.implicitly_wait(2)
driver.get(archive_url)
html = driver.page_source


#create beautiful-soup object 
soup = BeautifulSoup(html,'html.parser')

# find all links on web-page 
dates = soup.findAll('div', attrs={'class': 'cop-ap-date apFormatted'})
rows = soup.findAll(['tr'])
pdfs = soup.findAll('a',attrs={'class': 'ico pdf'})
titles = soup.findAll('title')
for x in pdfs:
	toparse=str(x.get('title')) #Turns titles into string to be maniuplated
	toparse=toparse.replace('Meeting ','')
	toparse=toparse.replace('PDF','')
	toparse=toparse.replace('Session ','')
	toparse=toparse.replace('AM','')
	toparse=toparse.replace('PM','')
	date_extract=re.search(r'\d{1,2}''/''\d{1,2}''/''\d{4}',toparse) # extracts date
	time_extract=re.search(r'(1[0-2]|0?[1-9]):([0-5]?[0-9])(:[0-5]?[0-9])?  ',toparse) #extracts time from title
	toparse=toparse.replace(date_extract.group(),'') #Removes date form string
	docs=str(x.get('href')) #Turns links into strings
	date=date_extract.group()#assisngs date to dariable to ve formated
	if time_extract!=None: # Checks of Title has time or not
		toparse=toparse.replace(time_extract.group(),'')
		formated_date=datetime.strptime(date, '%m/%d/%Y').strftime('%Y%m%d') #converts date to yyyymmdd format
		filename=formated_date+toparse
	else: #if title has no 
		toparse=toparse.replace('10:00:00 ','') #Removes the time of 10:00:00 from Avation meetings
		formated_date=datetime.strptime(date, '%m/%d/%Y').strftime('%Y%m%d') #converts date to yyyymmdd format
		filename=formated_date+toparse
	filename=filename.strip()

	downloadfiles=requests.get('https://www.phoenix.gov'+docs)	#creates the pdfs to be documented

	if os.path.exists('/Users/michael/Google Drive/CityCouncil/'+filename+'.pdf'): #Checks if file has already been downloaded
		print(filename+'.pdf already exist')
	else:
		with open('/Users/michael/Google Drive/CityCouncil/'+filename+'.pdf', 'wb') as f:
   			f.write(downloadfiles.content)
		print(filename+ ' has been downloaded')

print('Download(s) complete')
driver.close()
